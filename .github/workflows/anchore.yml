# name: Anchore Grype vulnerability scan 

# on:
#   push:
#     branches: [ "main" ]
#     paths:
#       - ".github/workflows/anchore.yml"
#   pull_request:
#     # The branches below must be a subset of the branches above
#     branches: [ "main" ]
#     paths:
#       - ".github/workflows/anchore.yml"
#   # schedule:
#   #   - cron: '0 23 * * 0'

# # permissions:
# #   contents: read

# jobs:
#   Anchore-Build-Scan:
#     permissions:
#       contents: read # for actions/checkout to fetch code
#       security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
#       actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
#     runs-on: ubuntu-latest
#     steps:
#     - name: Check out the code
#       uses: actions/checkout@v4
#     - name: Build the Docker image
#       run: docker build . --file Dockerfile --tag localbuild/testimage:latest
#     - name: Run the Anchore Grype scan action
#       uses: anchore/scan-action@v2
#       id: scan
#       with:
#         image: "localbuild/testimage:latest"
#         grype-version: 0.77.4
#         fail-build: true
#         severity-cutoff: critical
#     - name: Upload vulnerability report
#       uses: github/codeql-action/upload-sarif@v2
#       with:
#         sarif_file: ${{ steps.scan.outputs.sarif }}


name: Anchore Grype Vulnerability Scan

on:
  push:
    branches: [ "debug-anchore-grype" ]
    paths:
      - ".github/workflows/anchore.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - ".github/workflows/anchore.yml"

jobs:
  Anchore-Build-Scan:
    permissions:
      contents: read
      security-events: write
    runs-on: ubuntu-latest

    steps:
    # Check out the code
    - name: Check out the code
      uses: actions/checkout@v4

    # Print environment and available disk space for debugging
    - name: Print environment details and disk space
      run: |
        echo "Running on $(uname -a)"
        echo "Current directory: $(pwd)"
        df -h
        docker --version
    
    # Build Docker image 
    - name: Build the Docker image
      run: |
        echo "Building Docker image..."
        docker build . --file Dockerfile --tag localbuild/testimage:latest
        echo "Docker build finished with exit code $?"
        echo "Listing Docker images:"
        docker images

    # Clean up unused Docker images to free up space
    - name: Clean up Docker
      run: |
        echo "Cleaning up Docker to free up space..."
        docker system prune -f
        echo "Disk space after cleanup:"
        df -h

    - name: Run the Anchore Grype scan action
      id: scan
      uses: anchore/scan-action@v4
      with:
        image: "localbuild/testimage:latest"
        grype-version: 0.77.4

    - name: Check SARIF output
      run: |
        echo "SARIF Output: ${{ steps.scan.outputs.sarif }}"
        ls -alh

    - name: Upload vulnerability report
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}

    # Additional cleanup
    - name: Final cleanup
      run: |
        echo "Cleaning up unused containers and images..."
        docker system prune -f
        echo "Final disk space:"
        df -h