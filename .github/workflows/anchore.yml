# name: Anchore Grype vulnerability scan 

# on:
#   push:
#     branches: [ "main" ]
#     paths:
#       - ".github/workflows/anchore.yml"
#   pull_request:
#     # The branches below must be a subset of the branches above
#     branches: [ "main" ]
#     paths:
#       - ".github/workflows/anchore.yml"
#   # schedule:
#   #   - cron: '0 23 * * 0'

# # permissions:
# #   contents: read

# jobs:
#   Anchore-Build-Scan:
#     permissions:
#       contents: read # for actions/checkout to fetch code
#       security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
#       actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
#     runs-on: ubuntu-latest
#     steps:
#     - name: Check out the code
#       uses: actions/checkout@v4
#     - name: Build the Docker image
#       run: docker build . --file Dockerfile --tag localbuild/testimage:latest
#     - name: Run the Anchore Grype scan action
#       uses: anchore/scan-action@v2
#       id: scan
#       with:
#         image: "localbuild/testimage:latest"
#         grype-version: 0.77.4
#         fail-build: true
#         severity-cutoff: critical
#     - name: Upload vulnerability report
#       uses: github/codeql-action/upload-sarif@v2
#       with:
#         sarif_file: ${{ steps.scan.outputs.sarif }}


name: Anchore Grype Vulnerability Scan

on:
  push:
    branches: [ "debug-anchore-grype" ]
    paths:
      - ".github/workflows/anchore.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - ".github/workflows/anchore.yml"

jobs:
  Anchore-Build-Scan:
    permissions:
      contents: read # Needed for actions/checkout to fetch the code
      security-events: write # For uploading vulnerability results
    runs-on: ubuntu-latest

    steps:
    - name: Check out the code
      uses: actions/checkout@v4

    # Print environment details for debugging
    - name: Print environment details
      run: |
        echo "Running on $(uname -a)"
        echo "Current directory: $(pwd)"
        echo "Listing files in root directory:"
        ls -la /
    
    # Print details of the repository contents for debugging
    - name: List repository files
      run: |
        echo "Listing files in repository directory:"
        ls -la .

    # Install dependencies needed for Docker image build
    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y wget unzip cmake build-essential libjson-c-dev
        echo "Installed packages:"
        dpkg --get-selections | grep -v deinstall

    # Build Docker image with detailed logging
    - name: Build the Docker image
      run: |
        echo "Building Docker image..."
        docker build . --file Dockerfile --tag localbuild/testimage:latest
        echo "Docker build finished with exit code $?"
        echo "Listing images to ensure the build was successful:"
        docker images

    # Run the Anchore Grype scan action
    - name: Run the Anchore Grype scan action
      uses: anchore/scan-action@v2
      id: scan
      with:
        image: "localbuild/testimage:latest"
        grype-version: 0.77.4
        fail-build: true
        severity-cutoff: critical

    # Debugging: Show Grype scan results
    - name: Show Grype scan results
      run: |
        echo "Listing Grype scan results:"
        ls -la ${{ steps.scan.outputs.sarif }}

    # Upload the SARIF vulnerability report to GitHub's security tab
    - name: Upload vulnerability report
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}
