name: Multi OS docker images  - arm64 MAC OS 
 
on:
  push:
    branches: [main]
    paths:
      - "architecture/arm64/Dockerfiles/*.Dockerfile"
      - "architecture/arm64/Dockerfile"
      - ".github/workflows/multi-os-arm64.yaml"
  pull_request:
    branches: [main]
    paths:
      - "architecture/arm64/Dockerfiles/*.Dockerfile"
      - "architecture/arm64/Dockerfile"
      - ".github/workflows/multi-os-arm64.yaml"

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKERFILE: architecture/arm64
  DOCKERFILES_PATH: architecture/arm64/Dockerfiles
  IMAGE_NAME: ${{ github.repository }}\
  # Get the short commit SHA
  COMMIT_SHA: ${{ github.sha }}


jobs:
  arm64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Github Login
      env:
        GITHUB_TOKEN: ${{secrets.TOKEN}}
      run: |
        echo "${{secrets.TOKEN}}" | docker login ghcr.io -u ${{secrets.USERNAME}} --password-stdin
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Clean Docker build cache
      run: |
        docker buildx prune -f

     # Clear apt cache    
    - name: Clear apt cache
      run: sudo apt-get clean

    # Build Docker images
    - name: Build nightingale_programming_image
      run: |
        docker buildx build --push --platform linux/arm64/v8 . --no-cache --file $DOCKERFILES_PATH/programming_langauge.Dockerfile --label branch=main --label commit_sha=$COMMIT_SHA --tag $DOCKER_REGISTRY/rajanagori/nightingale_programming_image:arm64

    - name: Build nightingale_forensic_and_red_teaming
      run: |
        docker buildx build --push --platform linux/arm64/v8 . --no-cache --file $DOCKERFILES_PATH/forensics_and_redteam.Dockerfile --label branch=main --label commit_sha=$COMMIT_SHA --tag $DOCKER_REGISTRY/rajanagori/nightingale_forensic_and_red_teaming:arm64
    
    - name: Build nightingale_web_vapt_image
      run: |
        docker buildx build --push --platform linux/arm64/v8  . --no-cache --file $DOCKERFILES_PATH/web_vapt.Dockerfile --label branch=main --label commit_sha=$COMMIT_SHA --tag $DOCKER_REGISTRY/rajanagori/nightingale_web_vapt_image:arm64
    
    - name: Build nightingale_network_vapt_image
      run: |
        docker buildx build --push --platform linux/arm64/v8 . --no-cache --file $DOCKERFILES_PATH/network_vapt.Dockerfile --label branch=main --label commit_sha=$COMMIT_SHA --tag $DOCKER_REGISTRY/rajanagori/nightingale_network_vapt_image:arm64
   
    - name: Build nightingale_osint_image
      run: |
        docker buildx build --push --platform linux/arm64/v8 . --no-cache --file $DOCKERFILES_PATH/osint_tools.Dockerfile --label branch=main --label commit_sha=$COMMIT_SHA --tag $DOCKER_REGISTRY/rajanagori/nightingale_osint_tools_image:arm64
   
    - name: Build nightingale_mobile_vapt_image
      run: |
        docker buildx build --push --platform linux/arm64/v8 . --no-cache --file $DOCKERFILES_PATH/mobile_vapt.Dockerfile --label branch=main --label commit_sha=$COMMIT_SHA --tag $DOCKER_REGISTRY/rajanagori/nightingale_mobile_vapt_image:arm64
    
    - name: Build nightingale_wordlist_image
      run: |
        docker buildx build --push --platform linux/arm64/v8 . --no-cache --file $DOCKERFILES_PATH/wordlist.Dockerfile --label branch=main --label commit_sha=$COMMIT_SHA --tag $DOCKER_REGISTRY/rajanagori/nightingale_wordlist_image:arm64
    
    - name: Build nightingale_arm64_image
      run: |
        docker buildx build --push --platform linux/arm64/v8 . --no-cache --file $DOCKERFILE/Dockerfile --label branch=main --label commit_sha=$COMMIT_SHA --tag $DOCKER_REGISTRY/rajanagori/nightingale:arm64

    - name: Clean Docker build cache - amd64
      run: |
        docker buildx prune -f