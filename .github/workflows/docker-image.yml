name: Docker Image CI

on:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfiles/*'
      - 'Dockerfile'
  pull_request:
    branches: [ main ]
    paths:
      - 'Dockerfiles/*'
      - 'Dockerfile'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - 
    name: docker login
    uses: actions/checkout@v3
      env:
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

    - 
    name: docker build for programming language image and pushing to the docker hub
    uses: actions/checkout@v3
      id: programming-language-image
      with:
          filters: |
            dockerfile:
              - Dockerfiles/programming_langauge.Dockerfile
      run: docker build . --file Dockerfiles/programming_langauge.Dockerfile --tag rajanagori/nightingale_programming_image:v1

    - if: steps.programming-language-image.outputs.dockerfile == 'true'
      run: docker push rajanagori/nightingale_programming_image:v1

    - 
    name: docker build for forensics image and pushing to the docker hub
    uses: actions/checkout@v3
      id: forensics-image
      with:
          filters: |
            dockerfile:
              - Dockerfiles/forensics_and_redteam.Dockerfile
      run: docker build . --file Dockerfiles/forensics_and_redteam.Dockerfile --tag rajanagori/nightingale_forensic_and_red_teaming:v1.0

    - if: steps.forensics-image.outputs.dockerfile == 'true'
      run: docker push rajanagori/nightingale_forensic_and_red_teaming:v1.0

    - 
    name: docker build for web image and pushing to the docker hub
    uses: actions/checkout@v3
      id: web-image
      with:
          filters: |
            dockerfile:
              - Dockerfiles/web_vapt.Dockerfile
      run: docker build . --file Dockerfiles/web_vapt.Dockerfile --tag rajanagori/nightingale_web_vapt_image:v1.0

    - if: steps.web-image.outputs.dockerfile == 'true'
      run: docker push rajanagori/nightingale_web_vapt_image:v1.0

    - 
    name: docker build for network image and pushing to the docker hub
    uses: actions/checkout@v3
      id: network-image
      with:
          filters: |
            dockerfile:
              - Dockerfiles/network_vapt.Dockerfile
      run: docker build . --file Dockerfiles/network_vapt.Dockerfile --tag rajanagori/nightingale_network_vapt_image:v1.0

    - if: steps.network-image.outputs.dockerfile == 'true'
      run: docker push rajanagori/nightingale_network_vapt_image:v1.0
    
    - 
    name: docker build for osint image and pushing to the docker hub
    uses: actions/checkout@v3
      id: osint-image
      with:
          filters: |
            dockerfile:
              - Dockerfiles/osint_tools.Dockerfile
      run: docker build . --file Dockerfiles/osint_tools.Dockerfile --tag rajanagori/nightingale_osint_image:v1.0

    - if: steps.osint-image.outputs.dockerfile == 'true'
      run: docker push rajanagori/nightingale_osint_image:v1.0

    - 
    name: docker build for mobile image
    uses: actions/checkout@v3
      id: mobile-image
      with:
          filters: |
            dockerfile:
              - Dockerfiles/mobile_vapt.Dockerfile
      run: docker build . --file Dockerfiles/mobile_vapt.Dockerfile --tag rajanagori/nightingale_mobile_vapt_image:v1.0

    - if: steps.mobile-image.outputs.dockerfile == 'true'
      run: docker push rajanagori/nightingale_mobile_vapt_image:v1.0

    - 
    name: docker build for wordlist image
    uses: actions/checkout@v3
      id: wordlist-image
      with:
          filters: |
            dockerfile:
              - Dockerfiles/wordlist.Dockerfile
      run: docker build . --file Dockerfiles/wordlist.Dockerfile --tag rajanagori/nightingale_wordlist_image:v1.0
    - if: steps.wordlist-image.outputs.dockerfile == 'true'
      run: docker push rajanagori/nightingale_wordlist_image:v1.0

    - 
    name: Build the Docker image and push it to docker hub for Final Nightingale image
    uses: actions/checkout@v3
      id: final-image
      with:
          filters: |
            dockerfile:
              - Dockerfile
      run: docker build . --file Dockerfile --tag rajanagori/nightingale:latest
    - if: steps.final-image.outputs.dockerfile == 'true'
      run: docker push rajanagori/nightingale:latest