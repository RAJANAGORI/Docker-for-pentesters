name: Docker Image CI

on:
  push:
    branches: [development]
  pull_request:
    branches: [development]

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKERFILES_PATH: Dockerfiles
  IMAGE_NAME: ${{ github.repository }}


jobs:
  amd64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Github Login
      env:
        GITHUB_TOKEN: ${{secrets.TOKEN}}
      run: |
        echo "${{secrets.TOKEN}}" | docker login ghcr.io -u ${{secrets.USERNAME}} --password-stdin
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    # Build Docker images
    - name: Build nightingale_programming_image
      run: |
        docker buildx build --platform linux/amd64 . --no-cache --file $DOCKERFILES_PATH/programming_langauge.Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale_programming_image:linux-amd64
    # # Push Docker images
    - name: Push nightingale_programming_image
      run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_programming_image:linux-amd64"

    # - name: Build nightingale_forensic_and_red_teaming
    #   run: |
    #     docker buildx build --platform linux/amd64 . --no-cache --file $DOCKERFILES_PATH/forensics_and_redteam.Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale_forensic_and_red_teaming:linux-amd64
    
    # - name: Push nightingale_forensic_and_red_teaming1
    #   run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_forensic_and_red_teaming:linux-amd64"
    
    # - name: Build nightingale_web_vapt_image
    #   run: |
    #     docker buildx build --platform linux/amd64  . --file $DOCKERFILES_PATH/web_vapt.Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale_web_vapt_image:linux-amd64
    
    # - name: Push nightingale_web_vapt_image
    #   run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_web_vapt_image:linux-amd64"
    
    # - name: Build nightingale_network_vapt_image
    #   run: |
    #     docker buildx build --platform linux/amd64 . --no-cache --file $DOCKERFILES_PATH/network_vapt.Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale_network_vapt_image:linux-amd64
    
    # - name: Push nightingale_network_vapt_image
    #   run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_network_vapt_image:linux-amd64"
    
    # - name: Build nightingale_osint_image
    #   run: |
    #     docker buildx build --platform linux/amd64 . --no-cache --file $DOCKERFILES_PATH/osint_tools.Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale_osint_tools_image:linux-amd64
    
    # - name: Push nightingale_osint_image
    #   run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_osint_tools_image:linux-amd64"
    
    # - name: Build nightingale_mobile_vapt_image
    #   run: |
    #     docker buildx build --platform linux/amd64 . --no-cache --file $DOCKERFILES_PATH/mobile_vapt.Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale_mobile_vapt_image:linux-amd64
    
    # - name: Push nightingale_mobile_vapt_image
    #   run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_mobile_vapt_image:linux-amd64"
    
    # - name: Build nightingale_wordlist_image
    #   run: |
    #     docker buildx build --platform linux/amd64 . --no-cache --file $DOCKERFILES_PATH/wordlist.Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale_wordlist_image:linux-amd64
    
    # - name: Push nightingale_wordlist_image
    #   run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_wordlist_image:linux-amd64"
    
    # - name: Build nightingale_linux-amd64_image
    #   run: |
    #     docker buildx build --platform linux/amd64 . --no-cache --file Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale:linux-amd64

    # - name: Push nightingale_linux-amd64_image
    #   run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale:linux-amd64"
  
  arm64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Github Login
      env:
        GITHUB_TOKEN: ${{secrets.TOKEN}}
      run: |
        echo "${{secrets.TOKEN}}" | docker login ghcr.io -u ${{secrets.USERNAME}} --password-stdin
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    # Build Docker images
    - name: Build nightingale_programming_image
      run: |
        docker buildx build --platform linux/arm64 . --no-cache --file $DOCKERFILES_PATH/programming_langauge.Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale_programming_image:linux-arm64
    # # Push Docker images
    - name: Push nightingale_programming_image
      run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_programming_image:linux-arm64"

    # - name: Build nightingale_forensic_and_red_teaming
    #   run: |
    #     docker buildx build --platform linux/arm64 . --no-cache --file $DOCKERFILES_PATH/forensics_and_redteam.Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale_forensic_and_red_teaming:linux-arm64
    
    # - name: Push nightingale_forensic_and_red_teaming1
    #   run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_forensic_and_red_teaming:linux-arm64"
    
    # - name: Build nightingale_web_vapt_image
    #   run: |
    #     docker buildx build --platform linux/arm64  . --file $DOCKERFILES_PATH/web_vapt.Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale_web_vapt_image:linux-arm64
    
    # - name: Push nightingale_web_vapt_image
    #   run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_web_vapt_image:linux-arm64"
    
    # - name: Build nightingale_network_vapt_image
    #   run: |
    #     docker buildx build --platform linux/arm64 . --no-cache --file $DOCKERFILES_PATH/network_vapt.Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale_network_vapt_image:linux-arm64
    
    # - name: Push nightingale_network_vapt_image
    #   run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_network_vapt_image:linux-arm64"
    
    # - name: Build nightingale_osint_image
    #   run: |
    #     docker buildx build --platform linux/arm64 . --no-cache --file $DOCKERFILES_PATH/osint_tools.Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale_osint_tools_image:linux-arm64
    
    # - name: Push nightingale_osint_image
    #   run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_osint_tools_image:linux-arm64"
    
    # - name: Build nightingale_mobile_vapt_image
    #   run: |
    #     docker buildx build --platform linux/arm64 . --no-cache --file $DOCKERFILES_PATH/mobile_vapt.Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale_mobile_vapt_image:linux-arm64
    
    # - name: Push nightingale_mobile_vapt_image
    #   run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_mobile_vapt_image:linux-arm64"
    
    # - name: Build nightingale_wordlist_image
    #   run: |
    #     docker buildx build --platform linux/arm64 . --no-cache --file $DOCKERFILES_PATH/wordlist.Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale_wordlist_image:linux-arm64
    
    # - name: Push nightingale_wordlist_image
    #   run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_wordlist_image:linux-arm64"
    
    # - name: Build nightingale_linux-arm64_image
    #   run: |
    #     docker buildx build --platform linux/arm64 . --no-cache --file Dockerfile --tag $DOCKER_REGISTRY/rajanagori/nightingale:linux-arm64

    # - name: Push nightingale_linux-arm64_image
    #   run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale:linux-arm64"