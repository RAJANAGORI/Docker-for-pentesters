# name: Docker Image CI

# on:
#   push:
#     branches: [development]
#     paths:
#       - "Dockerfiles/*.Dockerfile"
#       - "Dockerfile"
#       - ".github/workflows/docker-image.yaml"
#   pull_request:
#     branches: [development]
#     paths:
#       - "Dockerfiles/*.Dockerfile"
#       - "Dockerfile"
#       - ".github/workflows/docker-image.yaml"

# env:
#   DOCKER_REGISTRY: ghcr.io
#   DOCKERFILES_PATH: Dockerfiles
#   IMAGE_NAME: ${{ github.repository }}


# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - name: Github Login
#       env:
#         GITHUB_TOKEN: ${{secrets.TOKEN}}
#       run: |
#         echo "${{secrets.TOKEN}}" | docker login ghcr.io -u ${{secrets.USERNAME}} --password-stdin
#     # Clear apt cache    
#     - name: Clear apt cache
#       run: sudo apt-get clean

#     # Build Docker images
#     - name: Build nightingale_programming_image
#       run: |
#         docker build . --no-cache --file $DOCKERFILES_PATH/programming_langauge.Dockerfile --label branch=development --label owner=RAJANAGORI --tag $DOCKER_REGISTRY/rajanagori/nightingale_programming_image:development
#     # # Push Docker images
#     - name: Push nightingale_programming_image
#       run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_programming_image:development"

#     - name: Build nightingale_forensic_and_red_teaming
#       run: |
#         docker build . --no-cache --file $DOCKERFILES_PATH/forensics_and_redteam.Dockerfile --label branch=development --label owner=RAJANAGORI --tag $DOCKER_REGISTRY/rajanagori/nightingale_forensic_and_red_teaming:development
    
#     - name: Push nightingale_forensic_and_red_teaming1
#       run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_forensic_and_red_teaming:development"
    
#     - name: Build nightingale_web_vapt_image
#       run: |
#         docker build  . --no-cache --file $DOCKERFILES_PATH/web_vapt.Dockerfile --label branch=development --label owner=RAJANAGORI --tag $DOCKER_REGISTRY/rajanagori/nightingale_web_vapt_image:development
    
#     - name: Push nightingale_web_vapt_image
#       run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_web_vapt_image:development"
    
#     - name: Build nightingale_network_vapt_image
#       run: |
#         docker build . --no-cache --file $DOCKERFILES_PATH/network_vapt.Dockerfile --label branch=development --label owner=RAJANAGORI --tag $DOCKER_REGISTRY/rajanagori/nightingale_network_vapt_image:development
    
#     - name: Push nightingale_network_vapt_image
#       run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_network_vapt_image:development"
    
#     - name: Build nightingale_osint_image
#       run: |
#         docker build . --no-cache --file $DOCKERFILES_PATH/osint_tools.Dockerfile --label branch=development --label owner=RAJANAGORI --tag $DOCKER_REGISTRY/rajanagori/nightingale_osint_tools_image:development
    
#     - name: Push nightingale_osint_image
#       run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_osint_tools_image:development"
    
#     - name: Build nightingale_mobile_vapt_image
#       run: |
#         docker build . --no-cache --file $DOCKERFILES_PATH/mobile_vapt.Dockerfile --label branch=development --label owner=RAJANAGORI --tag $DOCKER_REGISTRY/rajanagori/nightingale_mobile_vapt_image:development
    
#     - name: Push nightingale_mobile_vapt_image
#       run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_mobile_vapt_image:development"
    
#     - name: Build nightingale_wordlist_image
#       run: |
#         docker build . --no-cache --file $DOCKERFILES_PATH/wordlist.Dockerfile --label branch=development --label owner=RAJANAGORI --tag $DOCKER_REGISTRY/rajanagori/nightingale_wordlist_image:development
    
#     - name: Push nightingale_wordlist_image
#       run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale_wordlist_image:development"
    
#     - name: Build nightingale_development_image
#       run: |
#         docker build . --no-cache --file Dockerfile --label branch=development --label owner=RAJANAGORI --tag $DOCKER_REGISTRY/rajanagori/nightingale:development

#     - name: Push nightingale_development_image
#       run: docker push "$DOCKER_REGISTRY/rajanagori/nightingale:development"
name: Docker Image CI

on:
  push:
    branches: [development]
    paths:
      - "Dockerfiles/*.Dockerfile"
      - "Dockerfile"
      - ".github/workflows/docker-image.yaml"
  pull_request:
    branches: [development]
    paths:
      - "Dockerfiles/*.Dockerfile"
      - "Dockerfile"
      - ".github/workflows/docker-image.yaml"

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKERFILES_PATH: Dockerfiles
  IMAGE_NAME: ${{ github.repository }}
  ACTIONS_RUNNER_DEBUG: true      # Enable runner-level debug logs
  ACTIONS_STEP_DEBUG: true        # Enable step-level debug logs

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Github Login
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        echo "${{ secrets.TOKEN }}" | docker login ghcr.io -u ${{ secrets.USERNAME }} --password-stdin
    
    - name: Clear apt cache
      run: sudo apt-get clean

    - name: Calculate Version Tags
      id: version
      run: |
        # Define the prefix for version tags
        TAG_PREFIX="v1."
        
        # Fetch the list of tags from the Docker registry
        RESPONSE=$(curl -s -u ${{ secrets.USERNAME }}:${{ secrets.TOKEN }} https://ghcr.io/v2/rajanagori/nightingale/tags/list)
        
        # Print the raw response for debugging
        echo "Raw response: $RESPONSE"
        
        # Extract tags, handle cases where 'tags' might be null or not present
        TAGS=$(echo "$RESPONSE" | jq -r '.tags // [] | select(startswith("v1.")) | sort')
        
        # Print the extracted tags for debugging
        echo "Filtered tags: $TAGS"
        
        # Get the latest tag from the sorted list
        LAST_TAG=$(echo "$TAGS" | jq -r 'last // empty')
        
        # Print the last tag for debugging
        echo "Last tag: $LAST_TAG"
        
        # Get the next version number
        if [ -z "$LAST_TAG" ]; then
          # If no tags are found, start with version 1
          VERSION=1
        else
          # Extract the current version number and increment it
          VERSION=$(echo "$LAST_TAG" | awk -F'.' '{print $3+1}')
        fi
        
        # Construct the new version tag
        VERSION_TAG="${TAG_PREFIX}${VERSION}.0"
        
        # Export the new version tag and commit hash as environment variables
        echo "VERSION_TAG=${VERSION_TAG}" >> $GITHUB_ENV
        echo "COMMIT_HASH=$(echo 82db2b583e1676bc5dd97a2680e7de317953b447 | cut -c1-7)" >> $GITHUB_ENV

    # Build and Push Docker images with version and commit hash tags
    - name: Build and Push nightingale_programming_image
      run: |
        VERSION_TAG=${{ env.VERSION_TAG }}
        COMMIT_HASH=${{ env.COMMIT_HASH }}
        docker build . --no-cache --file $DOCKERFILES_PATH/programming_langauge.Dockerfile \
          --label branch=development --label owner=RAJANAGORI \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_programming_image:development \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_programming_image:$VERSION_TAG \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_programming_image:$COMMIT_HASH
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_programming_image:development"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_programming_image:$VERSION_TAG"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_programming_image:$COMMIT_HASH"
    
    - name: Build and Push nightingale_forensic_and_red_teaming
      run: |
        VERSION_TAG=${{ env.VERSION_TAG }}
        COMMIT_HASH=${{ env.COMMIT_HASH }}
        docker build . --no-cache --file $DOCKERFILES_PATH/forensics_and_redteam.Dockerfile \
          --label branch=development --label owner=RAJANAGORI \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_forensic_and_red_teaming:development \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_forensic_and_red_teaming:$VERSION_TAG \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_forensic_and_red_teaming:$COMMIT_HASH
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_forensic_and_red_teaming:development"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_forensic_and_red_teaming:$VERSION_TAG"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_forensic_and_red_teaming:$COMMIT_HASH"
    
    - name: Build and Push nightingale_web_vapt_image
      run: |
        VERSION_TAG=${{ env.VERSION_TAG }}
        COMMIT_HASH=${{ env.COMMIT_HASH }}
        docker build . --no-cache --file $DOCKERFILES_PATH/web_vapt.Dockerfile \
          --label branch=development --label owner=RAJANAGORI \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_web_vapt_image:development \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_web_vapt_image:$VERSION_TAG \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_web_vapt_image:$COMMIT_HASH
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_web_vapt_image:development"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_web_vapt_image:$VERSION_TAG"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_web_vapt_image:$COMMIT_HASH"
    
    - name: Build and Push nightingale_network_vapt_image
      run: |
        VERSION_TAG=${{ env.VERSION_TAG }}
        COMMIT_HASH=${{ env.COMMIT_HASH }}
        docker build . --no-cache --file $DOCKERFILES_PATH/network_vapt.Dockerfile \
          --label branch=development --label owner=RAJANAGORI \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_network_vapt_image:development \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_network_vapt_image:$VERSION_TAG \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_network_vapt_image:$COMMIT_HASH
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_network_vapt_image:development"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_network_vapt_image:$VERSION_TAG"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_network_vapt_image:$COMMIT_HASH"
    
    - name: Build and Push nightingale_osint_image
      run: |
        VERSION_TAG=${{ env.VERSION_TAG }}
        COMMIT_HASH=${{ env.COMMIT_HASH }}
        docker build . --no-cache --file $DOCKERFILES_PATH/osint_tools.Dockerfile \
          --label branch=development --label owner=RAJANAGORI \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_osint_tools_image:development \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_osint_tools_image:$VERSION_TAG \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_osint_tools_image:$COMMIT_HASH
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_osint_tools_image:development"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_osint_tools_image:$VERSION_TAG"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_osint_tools_image:$COMMIT_HASH"
    
    - name: Build and Push nightingale_mobile_vapt_image
      run: |
        VERSION_TAG=${{ env.VERSION_TAG }}
        COMMIT_HASH=${{ env.COMMIT_HASH }}
        docker build . --no-cache --file $DOCKERFILES_PATH/mobile_vapt.Dockerfile \
          --label branch=development --label owner=RAJANAGORI \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_mobile_vapt_image:development \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_mobile_vapt_image:$VERSION_TAG \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_mobile_vapt_image:$COMMIT_HASH
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_mobile_vapt_image:development"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_mobile_vapt_image:$VERSION_TAG"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_mobile_vapt_image:$COMMIT_HASH"
    
    - name: Build and Push nightingale_wordlist_image
      run: |
        VERSION_TAG=${{ env.VERSION_TAG }}
        COMMIT_HASH=${{ env.COMMIT_HASH }}
        docker build . --no-cache --file $DOCKERFILES_PATH/wordlist.Dockerfile \
          --label branch=development --label owner=RAJANAGORI \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_wordlist_image:development \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_wordlist_image:$VERSION_TAG \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale_wordlist_image:$COMMIT_HASH
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_wordlist_image:development"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_wordlist_image:$VERSION_TAG"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale_wordlist_image:$COMMIT_HASH"
    
    - name: Build and Push nightingale_development_image
      run: |
        VERSION_TAG=${{ env.VERSION_TAG }}
        COMMIT_HASH=${{ env.COMMIT_HASH }}
        docker build . --no-cache --file Dockerfile \
          --label branch=development --label owner=RAJANAGORI \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale:development \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale:$VERSION_TAG \
          --tag $DOCKER_REGISTRY/rajanagori/nightingale:$COMMIT_HASH
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale:development"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale:$VERSION_TAG"
        docker push "$DOCKER_REGISTRY/rajanagori/nightingale:$COMMIT_HASH"