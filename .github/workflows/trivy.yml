name: Trivy Scan

on:
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/trivy.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - ".github/workflows/trivy.yml"
  # schedule:
  #   - cron: '0 23 * * 0'

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    name: Build
    runs-on: "ubuntu-latest" # Use the latest Ubuntu version
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Updated to Node.js 20

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.29.2/trivy_0.29.2_Linux-64bit.deb
          sudo dpkg -i trivy_0.29.2_Linux-64bit.deb
          trivy --cache-dir ${HOME}/.cache/trivy

      # Reset Trivy cache
      - name: Reset Trivy cache
        run: trivy --reset

      - name: Run Trivy vulnerability scanner
        run: |
          trivy image --skip-dirs /home/wordlist --format template --template "@/contrib/sarif.tpl" --output trivy-results.sarif --severity CRITICAL ghcr.io/rajanagori/nightingale:stable

      - name: Generate SBOM
        run: |
          trivy sbom --format spdx-json --output sbom.json ghcr.io/rajanagori/nightingale:stable

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      # Upload artifacts for later download
      - name: Upload Trivy results artifact
        uses: actions/upload-artifact@v3
        with:
          name: trivy-results
          path: |
            trivy-results.sarif
            sbom.json